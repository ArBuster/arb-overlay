// Config file of V2Ray. This file follows standard JSON format, with comments support.
// Uncomment entries below to satisfy your needs. Also read our manual for more detail at
// https://www.v2ray.com/
{
  "log": {
    // By default, V2Ray writes access log to stdout.
    // "access": "/var/log/access.log",

    // By default, V2Ray write error log to stdout.
    // "error": "/var/log/error.log",

    // Log level, one of "debug", "info", "warning", "error", "none"
    "loglevel": "none"
  },
  
  // List of inbound proxy configurations.
  "inbounds": [{
    // Port to listen on. You may need root access if the value is less than 1024.
    "port": 443,

    // IP address to listen on. Change to "0.0.0.0" to listen on all network interfaces.
    "listen": "0.0.0.0",

    // Protocol name of inbound proxy.
    "protocol": "vmess",

    // Settings of the protocol. Varies based on protocol.
    "settings": {
      "clients": [{
        "id": "user UUID",
        "level": 0,
        "alterId": 4
      }],
      "disableInsecureEncryption": false
    },

    // Enable sniffing on TCP connection.
    "sniffing": {
      "enabled": false,
      // Target domain will be overriden to the one carried by the connection, if the connection is HTTP or HTTPS.
      "destOverride": ["http", "tls"]
    },

    "streamSettings": {
      "network": "tcp",
      "security": "tls",
      "tlsSettings": {
        "allowInsecureCiphers": false,
        "certificates": [{
          "usage": "encipherment",
          "certificateFile": "certificate path",
          "keyFile": "key path"
        }]
      },
      "sockopt": {
        "tcpFastOpen": false
      }
    }
  }],

  // List of outbound proxy configurations.
  "outbounds": [{
    // Protocol name of the outbound proxy.
    "protocol": "freedom",

    // Settings of the protocol. Varies based on protocol.
    "settings": {
      "domainStrategy": "AsIs"
    }
  }],

  // Policy controls some internal behavior of how V2Ray handles connections.
  // It may be on connection level by user levels in 'levels', or global settings in 'system.'
  "policy": {
    // Connection policys by user levels
    "levels": {
      "0": {
        "uplinkOnly": 0,
        "downlinkOnly": 0,
        "bufferSize": 0
      }
    },
    "system": {
      "statsInboundUplink": false,
      "statsInboundDownlink": false
    }
  }

  // Transport is for global transport settings. If you have multiple transports with same settings
  // (say mKCP), you may put it here, instead of in each individual inbound/outbounds.
  // "transport": {},

  // Routing controls how traffic from inbounds are sent to outbounds.
  // "routing": {},

  // Dns settings for domain resolution.
  // "dns": {},

  // Stats enables internal stats counter.
  // This setting can be used together with Policy and Api. 
  // "stats":{},

  // Api enables gRPC APIs for external programs to communicate with V2Ray instance.
  // "api": {},

  // You may add other entries to the configuration, but they will not be recognized by V2Ray.
  // "other": {}
}
