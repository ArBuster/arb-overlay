// Config file of Xray. This file follows standard JSON format, with comments support.
// Uncomment entries below to satisfy your needs. Also read our manual for more detail at
// https://xtls.github.io/
{
  "log": {
    // By default, Xray writes access log to stdout.
    // "access": "/var/log/xray/access.log",
    
    // By default, Xray write error log to stdout.
    // "error": "/var/log/xray/error.log",
    
    // "dnsLog": false,

    // Log level, one of "debug", "info", "warning", "error", "none"
    "loglevel": "none"
  },
  
  // List of inbound proxy configurations.
  "inbounds": [{
    "tag": "inbound_1",

    // IP address to listen on. Change to "0.0.0.0" to listen on all network interfaces.
    "listen": "127.0.0.1",

    // Port to listen on. You may need root access if the value is less than 1024.
    "port": 1080,
    
    // Protocol name of inbound proxy.
    "protocol": "socks",
    
    // Settings of the protocol. Varies based on protocol.
    "settings": {
      "auth": "noauth",
      "udp": true,
      "ip": "127.0.0.1",
      "userLevel": 0
    },

    // Enable sniffing on TCP connection.
    "sniffing": {
      "enabled": false
    }
  }],

  // List of outbound proxy configurations.
  "outbounds": [{
    "tag": "outbound_1",
    
    // Protocol name of the outbound proxy.
    "protocol": "socks",
    
    // Settings of the protocol. Varies based on protocol.
    "settings": {
      "servers": [{
        "address": "server ip",
        "port": 1080,
        "users": [{
          "user": "user_1",
          "pass": "user_1",
          "level": 0
        }]
      }]
    },

    "streamSettings": {
      "network": "tcp",
      "security": "reality",
      "realitySettings": {
        "shortId": "",
        "fingerprint": "chrome",
        "serverName": "",
        "publicKey": ""
      },
      "sockopt": {
        "tcpFastOpen": false
      }
    }
  }],
  
  // Policy controls some internal behavior of how Xray handles connections.
  // It may be on connection level by user levels in 'levels', or global settings in 'system.'
  "policy": {
    // Connection policys by user levels
    "levels": {
      "0": {
        "uplinkOnly": 0,
        "downlinkOnly": 0,
        "bufferSize": 0
      }
    }
  }

  // Routing controls how traffic from inbounds are sent to outbounds.
  // "routing": {},

  // Transport is for global transport settings. If you have multiple transports with same settings
  // (say mKCP), you may put it here, instead of in each individual inbound/outbounds.
  // "transport": {},

  // Dns settings for domain resolution.
  // "dns": {},

  // Stats enables internal stats counter.
  // This setting can be used together with Policy and Api. 
  // "stats":{},

  // Api enables gRPC APIs for external programs to communicate with Xray instance.
  // "api": {},

  // "reverse": {},

  // "fakedns": {}
}
